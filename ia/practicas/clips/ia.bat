; Si se utiliza load, se quita los comandos. En caso contrario, utiliza batch
;(watch focus)
;(watch generic-functions)
;(watch deffunctions)
;(watch statistics)
;(watch globals)

(watch facts)
(watch rules)
(watch activations)
(watch agenda)

(clear)
(reset)

(deftemplate coche
    (slot modelo (default Cochecito))
    (slot precio (type INTEGER) (default 13000))
    (slot maletero (allowed-values Pequeño Mediano Grande) (default Grande))
    (slot n_caballos (type INTEGER) (default 80))
    (slot abis (default Si))
    (slot consumo_litros (type FLOAT) (default 8.0))
)

(deftemplate coche_conf_cliente
    (slot modelo (default Cochecito))
    (slot precio (type INTEGER) (default 13000))
    (slot maletero (allowed-values "Pequeño" "Mediano" "Grande") (default "Grande"))
    (slot n_caballos (type INTEGER) (default 80))
    (slot abis (default "Si"))
    (slot consumo_litros (type FLOAT) (default 8.0))
)

(list-deftemplates)

(deffacts facts_on_init
    (coche (modelo modelo1)
           (precio 12000)
           (maletero Pequeño)
           (n_caballos 65)
           (abis No)
           (consumo_litros 4.7)
    )
    (coche (modelo modelo2)
           (precio 12500)
           (maletero Pequeño)
           (n_caballos 80)
           (consumo_litros 4.9)
    )
    (coche (modelo modelo3)
           (precio 13000)
           (maletero Mediano)
           (n_caballos 100)
           (consumo_litros 7.8)
    )
    (coche (modelo modelo4)
           (precio 14000)
           (maletero Grande)
           (n_caballos 125)
           (consumo_litros 6.0)
    )
    (coche (modelo modelo5)
           (precio 15000)
           (maletero Pequeño)
           (n_caballos 147)
           (consumo_litros 8.5)
    )
)
(reset)
(facts)


(defrule get_coche
    =>
    (printout t "Dime el precio del coche (null si no quiere precio) => ")
    (bind ?pr (read))
    
    (printout t "Dime el tamaño del Maletero del coche (null si no quiere maletero) => ")
    (bind ?ma (read))
    
    (printout t "Dime el minimo de Caballos (null si no quiere caballos) => ")
    (bind ?ca (read))
    
    (printout t "Dime si quiere ABS (null si no quiere ABS) => ")
    (bind ?abis (read))
    
    (printout t "Dime el consumo maximo (null si no quiere c.m.) => ")
    (bind ?cm (read))
    
    (assert (coche_conf_cliente (precio ?pr)
                                (maletero ?ma)
                                (n_caballos ?ca)
                                (abis ?abis)
                                (consumo_litros ?cm)
            )
    )
    ;(assert (precio_limite ?pr))
    ;(assert (maletero ?ma))
    ;(assert (caballos ?ca))
    ;(assert (abis ?abis))
    ;(assert (cm ?cm))
)

(defrule RComparativa
    (coche (modelo ?mol)
           (precio ?precioCoche)
           (maletero ?maleteroCoche)
           (n_caballos ?nCaballosCoche)
           (abis ?abisCoche)
           (consumo_litros ?cLitrosCoche)
    )
    (coche_conf_cliente (precio ?precioConfCoche)
           (maletero ?maleteroConfCoche)
           (n_caballos ?nCaballosConfCoche)
           (abis ?abisConfCoche)
           (consumo_litros ?cLitrosConfCoche)
    )
    (test(<= ?precioCoche ?precioConfCoche))
    (test(= (str-compare ?maleteroCoche ?maleteroConfCoche) 0))
    (test(>= ?nCaballosCoche ?nCaballosConfCoche))
    (test(= (str-compare ?abisCoche ?abisConfCoche) 0))
    (test(<= ?cLitrosCoche ?cLitrosConfCoche))
    
    =>
    (printout t crlf)
    (printout t "-----------------------------------" crlf)
    (printout t "El modelo que encaja es el => " ?mol crlf)
    (printout t "-----------------------------------" crlf)
    (printout t crlf)
)
(run)
